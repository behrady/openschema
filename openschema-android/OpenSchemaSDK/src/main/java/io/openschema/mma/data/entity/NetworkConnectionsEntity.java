/*
 * Copyright (c) 2020, The Magma Authors
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.openschema.mma.data.entity;

import android.location.Location;

import androidx.room.ColumnInfo;
import androidx.room.PrimaryKey;

/**
 * Base entity class used by Room to store network connections locally
 */
public class NetworkConnectionsEntity {
    /**
     * Autogenerated ID for Room database
     */
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "id")
    private int id;

    @ColumnInfo(name = "transport_type")
    private int transportType;

    //Storing a duplicate of aggregated duration & usage for easy access & live updates for map UI
    //Stored in milliseconds
    @ColumnInfo(name = "duration")
    private long duration;

    //Stored in bytes
    @ColumnInfo(name = "usage")
    private long usage;

    @ColumnInfo(name = "longitude")
    private double longitude;

    @ColumnInfo(name = "latitude")
    private double latitude;

    @ColumnInfo(name = "timestamp")
    private long timestamp;

    @ColumnInfo(name = "is_reported")
    private boolean isReported;

    public NetworkConnectionsEntity(int id, int transportType, long duration, long usage, double longitude, double latitude, long timestamp, boolean isReported) {
        this.id = id;
        this.transportType = transportType;
        this.duration = duration;
        this.usage = usage;
        this.longitude = longitude;
        this.latitude = latitude;
        this.timestamp = timestamp;
        this.isReported = isReported;
    }

    //We need to include the transport type to generate a unique key since each network uses an independent table for storage
    public String getCompoundId() {
        return Integer.toString(id) + transportType;
    }

    public int getId() { return id;}
    public int getTransportType() {return transportType;}
    public long getDuration() {return duration;}
    public long getUsage() {return usage;}
    public double getLongitude() {return longitude;}
    public double getLatitude() {return latitude;}
    public long getTimestamp() {return timestamp;}
    public boolean getIsReported() {return isReported;}

    public void setDuration(long duration) { this.duration = duration;}
    public void setUsage(long usage) { this.usage = usage;}

    public void setLocation(Location location) {
        longitude = location.getLongitude();
        latitude = location.getLatitude();
    }

//    public void setReported(boolean reported) { this.reported = reported;}
}